function Screen.init 0
push constant 0
not
pop static 0
push constant 0
return
function Screen.clearScreen 1
push static 0
pop local 0
push constant 0
pop static 0
push constant 0
push constant 0
push constant 255
push constant 511
call Screen.drawRectangle 4
pop temp 0
push local 0
pop static 0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 5
push constant 16384
push constant 32
push argument 1
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push local 0
call Memory.peek 1
pop local 1
push argument 0
push constant 16
push argument 0
push constant 16
call Math.divide 2
call Math.multiply 2
sub
pop local 2
push constant 1
pop local 4
label WHILE_EXP0
push local 3
push local 2
lt
not
if-goto WHILE_END0
push local 4
push local 4
add
pop local 4
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 4
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 1
push local 4
not
and
pop local 1
label IF_END0
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 15
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push argument 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
pop local 4
push argument 2
pop local 6
goto IF_END1
label IF_FALSE1
push argument 2
pop local 4
push argument 0
pop local 6
label IF_END1
push constant 0
pop local 14
push constant 16
push local 4
push constant 16
push local 4
push constant 16
call Math.divide 2
call Math.multiply 2
sub
sub
pop local 2
push constant 0
pop local 14
label WHILE_EXP0
push local 14
push local 2
lt
not
if-goto WHILE_END0
push local 4
push local 14
add
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 14
push constant 1
add
pop local 14
goto WHILE_EXP0
label WHILE_END0
push constant 16384
push constant 32
push argument 1
push constant 1
sub
call Math.multiply 2
add
push local 6
push constant 16
call Math.divide 2
add
pop local 3
push constant 2
pop local 14
label WHILE_EXP1
push local 14
push local 6
push local 4
sub
push constant 16
call Math.divide 2
push constant 1
add
lt
not
if-goto WHILE_END1
push static 0
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push local 14
add
push constant 1
neg
call Memory.poke 2
pop temp 0
goto IF_END2
label IF_FALSE2
push local 3
push local 14
add
push constant 0
call Memory.poke 2
pop temp 0
label IF_END2
push local 14
push constant 1
add
pop local 14
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 14
push local 6
push constant 16
push local 6
push constant 16
call Math.divide 2
call Math.multiply 2
sub
push constant 1
add
pop local 2
label WHILE_EXP2
push local 14
push local 2
lt
not
if-goto WHILE_END2
push local 6
push local 14
sub
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 14
push constant 1
add
pop local 14
goto WHILE_EXP2
label WHILE_END2
goto IF_END0
label IF_FALSE0
push argument 2
push argument 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
pop local 4
push argument 2
pop local 11
push argument 1
pop local 5
push argument 3
pop local 12
goto IF_END3
label IF_FALSE3
push argument 2
pop local 4
push argument 0
pop local 11
push argument 3
pop local 5
push argument 1
pop local 12
label IF_END3
push constant 1
pop local 6
push constant 0
pop local 7
push local 11
push local 4
sub
pop local 9
push local 12
push local 5
sub
pop local 10
push constant 0
pop local 8
push local 4
push local 5
call Screen.drawPixel 2
pop temp 0
push local 10
push constant 0
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
label WHILE_EXP3
push local 6
push local 9
push constant 1
add
lt
push local 7
push local 10
push constant 1
add
lt
or
not
if-goto WHILE_END3
push local 4
push local 6
add
push local 5
push local 7
add
call Screen.drawPixel 2
pop temp 0
push local 8
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 6
push constant 1
add
pop local 6
push local 8
push local 10
add
pop local 8
goto IF_END5
label IF_FALSE5
push local 7
push constant 1
add
pop local 7
push local 8
push local 9
sub
pop local 8
label IF_END5
goto WHILE_EXP3
label WHILE_END3
goto IF_END4
label IF_FALSE4
label WHILE_EXP4
push local 6
push local 9
push constant 1
add
lt
push local 7
push local 10
push constant 1
sub
gt
or
not
if-goto WHILE_END4
push local 4
push local 6
add
push local 5
push local 7
add
call Screen.drawPixel 2
pop temp 0
push local 8
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 6
push constant 1
add
pop local 6
push local 8
push local 10
sub
pop local 8
goto IF_END6
label IF_FALSE6
push local 7
push constant 1
sub
pop local 7
push local 8
push local 9
sub
pop local 8
label IF_END6
goto WHILE_EXP4
label WHILE_END4
label IF_END4
label IF_END0
push constant 0
return
function Screen.drawRectangle 3
push argument 3
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 1
push argument 3
pop local 2
goto IF_END0
label IF_FALSE0
push argument 3
pop local 1
push argument 1
pop local 2
label IF_END0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push local 2
push local 1
sub
lt
not
if-goto WHILE_END0
push argument 0
push local 1
push local 0
add
push argument 2
push local 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 2
push constant 1
neg
push argument 2
call Math.multiply 2
pop local 0
label WHILE_EXP0
push local 0
push argument 2
lt
push constant 1
add
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 0
sub
push local 0
call Math.multiply 2
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
