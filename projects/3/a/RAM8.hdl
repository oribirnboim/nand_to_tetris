// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux16(in=in, sel=address[2], a=h1, b=h2);
        DMux16(in=h1, sel=address[1], a=q1, b=q2);
            DMux16(in=q1, sel=address[0], a=in1, b=in2);
            DMux16(in=q2, sel=address[0], a=in3, b=in4);
        DMux16(in=h2, sel=address[1], a=q3, b=q4);
            DMux16(in=q3, sel=address[0], a=in5, b=in6);
            DMux16(in=q4, sel=address[0], a=in7, b=in8);
    
    DMux(in=load, sel=address[2], a=h1load, b=h2load);
        DMux(in=h1load, sel=address[1], a=q1load, b=q2load);
            DMux(in=q1load, sel=address[0], a=load1, b=load2);
            DMux(in=q2load, sel=address[0], a=load3, b=load4);
        DMux(in=h2load, sel=address[1], a=q3load, b=q4load);
            DMux(in=q3load, sel=address[0], a=load5, b=load6);
            DMux(in=q4load, sel=address[0], a=load7, b=load8);

    Register(in=in1, load=load1, out=out1);
    Register(in=in2, load=load2, out=out2);
    Register(in=in3, load=load3, out=out3);
    Register(in=in4, load=load4, out=out4);
    Register(in=in5, load=load5, out=out5);
    Register(in=in6, load=load6, out=out6);
    Register(in=in7, load=load7, out=out7);
    Register(in=in8, load=load8, out=out8);
    
    Mux16(a=hh1, b=hh2, sel=address[2], out=out);
        Mux16(a=qq1, b=qq2, sel=address[1], out=hh1);
            Mux16(a=out1, b=out2, sel=address[0], out=qq1);
            Mux16(a=out3, b=out4, sel=address[0], out=qq2);
        Mux16(a=qq3, b=qq4, sel=address[1], out=hh2);
            Mux16(a=out5, b=out6, sel=address[0], out=qq3);
            Mux16(a=out7, b=out8, sel=address[0], out=qq4);
}
